%%{init:{"themeVariables": {
    "noteBkgColor":"#f4f4f4", 
    "noteTextColor":"black",
    "noteBorderColor":"#000",
    "fontFamily":"Arial"
  }
}}%%
sequenceDiagram
    title Tournament MS Architecture
    autonumber

    create actor U as User
    create participant L as Lobby
    U-)L: Open connection (WS)
    Note right of L: Create lobby
    Note right of L: Host joins
    Note right of U: Show <br/>Lobby
    Note right of L: Host invites friends
    Note right of L: Set game rules
    Note right of U: Show <br/>Bracket Placeholder
    Note right of L: "Play"

    create participant T as Tournament
    L-)T: Send tournament request (NATS)
    Note right of T: Create Bracket
    Note right of T: Create tournamentObj 

    create participant GM as GameManager
    T-)GM: Send tournamentObj +<br/> bracketObj (NATS)
    destroy T
    T--)L: Send  tournamentObj +<br/> bracketObj (NATS)
    L--)U: Send bracketObj (WS)
    Note right of U: Show Real Bracket
    Note right of GM: PreGame
    Note right of GM: Receive tournamentObj +<br/> bracketObj
    Note right of GM: Start Routine
    %% Note right of GM: Pre: Organise tournament (match order)
    
      
      create participant P as Pong
      GM-)P: Send gameObj (NATS)
      P--)L: Send "game.ready" +<br/> gameID (NATS)
      destroy L
      L--)U: Close connection +<br/> Send "game.ready" +<br/> gameID (WS)
    loop Tournament Routine
      U-)P: Open connection via gameID (WS)
      Note right of P: Game
      P--)GM: Send updated gameObj (NATS)
      Note right of GM: PostGame
      Note right of GM: IF Continue Tournament
      GM-)P: Send next gameObj (NATS)
      P--)U: Send "game.ready" +<br/> gameID (WS)

      create participant DB as Database
      GM-)DB: Send gameObj (NATS)
      Note right of GM: Circle back to Step 9
    end
      Note right of GM: ELSE Tournament Over
      Note right of GM: Process endgame
      Note right of DB: Store result