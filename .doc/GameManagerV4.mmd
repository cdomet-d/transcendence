%%{init:{"themeVariables": {
    "noteBkgColor":"#f4f4f4", 
    "noteTextColor":"black",
    "noteBorderColor":"#000",
    "fontFamily":"Arial"
  }
}}%%
sequenceDiagram
    title Tournament MS Architecture
    autonumber

    create actor U as User
    create participant L as Lobby
    U-)L: Open connection (WS)
    Note right of L: Create lobby
    Note right of L: Host joins
    Note right of U: Show <br/>Lobby
    Note right of L: Host invites friends
    Note right of L: Set game rules
    Note right of U: Show <br/>Bracket  Placeholder
    Note right of L: "Play"

    create participant GM as GameManager
    L-)GM: Send tournament request (NATS)
    Note right of GM: 1. BracketCreation
    
    create participant T as Tournament
    GM-)T: Send Lobby info
    Note right of T: Create Bracket
    Note right of T: Create  tournamentObj 

    destroy T
    T--)GM: Send  tournamentObj + bracketObj (NATS)
    Note right of GM: 2. TournamentState
    Note right of GM: 2.1 Start Tournament Routine
    
    create participant P as Pong
    GM-)P: Send gameObj (NATS)
    P--)GM: Send "game.ready" + gameID (NATS)
    GM--)L: Send tournament 1st match request (NATS)
    destroy L
    L--)U: Close connection +<br/> Send "game.ready" +<br/> gameID (WS)

    loop Tournament Routine
      U-)P: Open connection via gameID (WS)
      Note right of P: Game
      P--)GM: Send updated gameObj (NATS)

      create participant DB as Database
      GM-)DB: Send gameObj (NATS)
      Note right of GM: 2.2 Continue Tournament Routine
      GM-)P: Send next gameObj (NATS)
      P--)U: Send "game.ready" + gameID (WS)
      Note right of DB: Store result
      Note right of GM: 2.3 Circle  back to Step 9
    end
      Note right of GM: 3. EndgameProcess
      GM-)P: Send Tournament Over (NATS)
      P--)U: Close connection (WS)